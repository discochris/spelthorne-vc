rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admin to read all users
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // All authenticated users can read sessions
    match /sessions/{sessionId} {
      allow read: if request.auth != null;
      // Only admin/committee can create/edit sessions
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'committee'];
    }
    
    // Users can read/write their own attendance records
    match /attendance/{attendanceId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Admin can read all attendance
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      // Allow creation if user matches
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Payment records
    match /payments/{paymentId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'committee']);
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'committee'];
    }
  }
}